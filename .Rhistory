12+ 34
x <- 123
x
d
y <- 234
x+y
x+100
x <- x + 100
x+y
z <- X+Y
rm(z,y,d)
rm(x)
ages <-  c(23,34,5,6,5)
summary(ages)
mean(ages)
ages <- c(23,34,54,56)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#library(tidyverse)
#fuction
#rm -remove existing values
ages <- c(23,34,54,56)
#library(tidyverse)
#fuction
#rm -remove existing values
ages <- c(23,34,54,56)
#library(tidyverse)
#fuction
#rm -remove existing values
ages <- c(23,34,54,56)
summary(ages)
hist(ages)
length(ages)
mean(ages)
#library(tidyverse)
#fuction
#rm -remove existing values
ages <- c(23,34,54,56)
summary(ages)
hist(ages)
length(ages)
mean(ages)
source('C:/Users/lukek/Desktop/BootCamp_R/demo.R')
source('C:/Users/lukek/Desktop/BootCamp_R/demo.R')
# Then load the package (must do once per session):
library(tidyverse)
library(tidyverse)
library(tidyverse)
shear()
search()
library(tidyverse)
search()
# Recall the anscombe data that come with R
anscombe
4+3
7+3
x <- 10
x
library(readr)
library(dplyr)
library(tidyverse)
library(anytime)
setwd("C:/Users/lukek/Desktop/Fall2018/SYS6018/HW/HW1_Titanic/sys6018-competition-titanic")
setwd("C:/Users/lukek/Desktop/Fall2018/SYS6018/HW/HW1_Titanic/sys6018-competition-titanic")
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_subbmission")
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_subbmission.csv")
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_submission.csv")
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_submission.csv")
test <- read_csv("test.csv")
train <- read_csv("train.csv")
View(test)
View(gender_submission)
View(train)
describe(test)
summary(test)
setwd("C:/Users/lukek/Desktop/Summer 2018/STAT 6430/R/Day4")
##### Logistic regression: LK: when response(y) is o or 1 ???
#
# Data on blood donors, x1-x5 are quantitative
# explanatory variables, y = 0/1 response depending
# on recent donation.
blood = read_csv("blood.csv")
##### Logistic regression: LK: when response(y) is o or 1 ???
#
# Data on blood donors, x1-x5 are quantitative
# explanatory variables, y = 0/1 response depending
# on recent donation.
blood = read_csv("blood.csv")
View(blood)
# "glm" is used for various types of
# models. Below we call logistic regression
# by setting family = "binomial"
# LK: for logistic reg. we use "glm"!
blood.lg <- glm(y~., data=blood.train, family = "binomial")
# Let's subset so that we can cross validate
sub <- sample(1:748,size=374)
blood.train <- blood[sub,]     # Select subset for cross-validation
blood.valid <- blood[-sub,]
# "glm" is used for various types of
# models. Below we call logistic regression
# by setting family = "binomial"
# LK: for logistic reg. we use "glm"!
blood.lg <- glm(y~., data=blood.train, family = "binomial")
#LK: family = bionomial means its model logistic.
summary(blood.lg)
# Let's test the full model on the training set
# to see how we do predicting.
probs<-as.vector(predict(blood.lg, type="response")) #LK: type="response" just syntax for logistic.
preds <- rep(0,374)  # Initialize prediction vector
preds[probs>0.5] <- 1 # p>0.5 -> 1
preds
table(preds,blood.train$y)
# This suggests that x2 and x3 might not be useful.  Let's
# try removing just x3:
blood.lg <- glm(y~.-x3, data=blood.train, family = "binomial")
summary(blood.lg)
# The AIC is slightly smaller for this reduced model, and
# x2 is now significant.  Suppose we remove just x2?
blood.lg <- glm(y~.-x2, data=blood.train, family = "binomial")
summary(blood.lg)
# The AIC and residual deviance is about the same, and
# now x3 is significant.  Remove both?
blood.lg <- glm(y~.-x2-x3, data=blood.train, family = "binomial")
summary(blood.lg)
# Now x4 is also not significant; remove it too?
blood.lg <- glm(y~.-x2-x3-x4, data=blood.train, family = "binomial")
summary(blood.lg)
# That's worse than just removing x2 or x3 alone.  And now
# x4 seems to not be significant.  Remove it too?
blood.lg <- glm(y~.-x2-x3-x4, data=blood.train, family = "binomial")
summary(blood.lg)
# These all might be a tie, but let's see what happens when
# we cross validate.
# Removing x3:
blood.lg <- glm(y~.-x3, data=blood.train, family = "binomial")
probs<-as.vector(predict(blood.lg,newdata=blood.valid, type="response"))
preds <- rep(0,374)  # Initialize prediction vector
preds[probs>0.5] <- 1 # p>0.5 -> 1
table(preds,blood.valid$y)
# Removing x2:
blood.lg <- glm(y~.-x2, data=blood.train, family = "binomial")
probs<-as.vector(predict(blood.lg,newdata=blood.valid, type="response"))
blood.lg
type(train)
typeof(train)
typeof(train$Sex)
setwd("C:/Users/lukek/Desktop/Fall2018/SYS6018/HW/HW1_Titanic/sys6018-competition-titanic")
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_submission.csv")
test <- read_csv("test.csv")
train <- read_csv("train.csv")
typeof(train$Sex)
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_submission.csv")
test <- read_csv("test.csv")
train <- read_csv("train.csv")
View(test)
View(train)
View(test)
View(train)
View(test)
View(train)
setwd("C:/Users/lukek/Desktop/Summer 2018/STAT 6430/R/Day4")
##### Logistic regression: LK: when response(y) is o or 1 ???
#
# Data on blood donors, x1-x5 are quantitative
# explanatory variables, y = 0/1 response depending
# on recent donation.
blood = read_csv("blood.csv")
# Let's subset so that we can cross validate
sub <- sample(1:748,size=374)
blood.train <- blood[sub,]     # Select subset for cross-validation
blood.valid <- blood[-sub,]
# "glm" is used for various types of
# models. Below we call logistic regression
# by setting family = "binomial"
# LK: for logistic reg. we use "glm"!
blood.lg <- glm(y~., data=blood.train, family = "binomial")
#LK: family = bionomial means its model logistic.
summary(blood.lg)
# Let's test the full model on the training set
# to see how we do predicting.
probs<-as.vector(predict(blood.lg, type="response")) #LK: type="response" just syntax for logistic.
preds <- rep(0,374)  # Initialize prediction vector
preds[probs>0.5] <- 1 # p>0.5 -> 1
preds
# Return to the model summary
summary(blood.lg)
# This suggests that x2 and x3 might not be useful.  Let's
# try removing just x3:
blood.lg <- glm(y~.-x3, data=blood.train, family = "binomial")
summary(blood.lg)
setwd("C:/Users/lukek/Desktop/Fall2018/SYS6018/HW/HW1_Titanic/sys6018-competition-titanic")
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_submission.csv")
test <- read_csv("test.csv")
train <- read_csv("train.csv")
View(test)
View(train)
# Factor ------------------------------------------------------------------
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)
train$Sex <- factor(train$Sex)
train$Embarked <- factor(train$Embarked)
891/2
# Cross validation --------------------------------------------------------
sub <- sample(1:891, size = 446)
train.train <- train[sub,]
train.valid <- train[-sub,]
train.lg <- glm(Survived~, data - train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~, data - train.train, family = "binomial")
train.lg <- glm(Survived~, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~, data = train.train, family = "binomial")
train.lg <- glm(Survived~., data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~.,-Name data = train.train, family = "binomial")
train.lg <- glm(Survived~.,-Name, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~.,-Name, data = train.train, family = "binomial")
train.lg <- glm(Survived~.-Name, data = train.train, family = "binomial")
train.lg <- glm(Survived~.-Name, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~.-Name -Ticket, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~.-Name -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
#test the full model on the training set
probs <- as.vector(predict(train.lg, type = "response"))
preds <- rep(0,446)
preds[probs>0.5] <- 1
preds
table(preds. train.train$Survived)
train.train
table(preds. train.train$Survived)
table(preds,train.train$Survived)
51+163
summary(train.lg)
#remove variables
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
#remove variables
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId -SibSp, data = train.train, family = "binomial")
summary(train.lg)
#remove variables
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
#remove variables
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId -SibSp -Parch -Embarked, data = train.train, family = "binomial")
summary(train.lg)
#remove variables
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -Embarked, data = train.train, family = "binomial")
summary(train.lg)
#remove variables
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -Embarked, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -Embarked, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -Embarked, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -SibSp, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
preds <- rep(0,446)
preds[probs>0.5] <- 1
table(preds, train.valid$Survived)
#remove PassenderId
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
preds <- rep(0,445)
preds[probs>0.5] <- 1
table(preds, train.valid$Survived)
68+173
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
summary(train.lg)
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
preds <- rep(0,445)
preds[probs>0.5] <- 1
table(preds, train.valid$Survived)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -SibSp -Parch, data = train.train, family = "binomial")
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
train$Name <- NULL
train.lg <- glm(Survived~.-Name -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
# Factor ------------------------------------------------------------------
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)
train$Sex <- factor(train$Sex)
train$Embarked <- factor(train$Embarked)
# Cross validation --------------------------------------------------------
sub <- sample(1:891, size = 446)
train.train <- train[sub,]
train.valid <- train[-sub,]
train.lg <- glm(Survived~.-Name -Ticket -Cabin, data = train.train, family = "binomial")
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
#test the full model on the training set
probs <- as.vector(predict(train.lg, type = "response"))
preds <- rep(0,446)
preds[probs>0.5] <- 1
preds
table(preds,train.train$Survived)
52+191
#remove PassenderId
train.lg <- glm(Survived~.-Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
probs <- as.vector(predict(train.lg, newdata = train.valid, type ="response"))
#remove PassenderId
train.lg <- glm(Survived~.-Ticket -Cabin -PassengerId, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Name -Ticket -Cabin -PassengerId -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Ticket -Cabin -PassengerId -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Ticket -Cabin -PassengerId -SibSp -Parch, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Ticket -Cabin -PassengerId -Pclass -Parch, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Ticket -Cabin -PassengerId -Pclass, data = train.train, family = "binomial")
summary(train.lg)
#remove PassenderId and Embarked
train.lg <- glm(Survived~.-Ticket -Cabin -PassengerId , data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~. , data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
#retrain data
probs <- as.vector(predict(train.lg, newdata = train, type ="response"))
preds <- rep(0,891)
preds[probs>0.5] <- 1
table(preds, train.valid$Survived)
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_submission.csv")
test <- read_csv("test.csv")
train <- read_csv("train.csv")
# Loading data ------------------------------------------------------------
gender_submission <- read_csv("gender_submission.csv")
test <- read_csv("test.csv")
train <- read_csv("train.csv")
# Factor ------------------------------------------------------------------
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)
train$Sex <- factor(train$Sex)
train$Embarked <- factor(train$Embarked)
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
# Cross validation --------------------------------------------------------
sub <- sample(1:891, size = 446)
train.train <- train[sub,]
train.valid <- train[-sub,]
train.lg <- glm(Survived~. -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
summary(train.lg)
train.lg <- glm(Survived~. -Name -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived~. -Name -Ticket -Cabin, data = train.train, family = "binomial")
summary(train.lg)
#retrain data
probs <- as.vector(predict(train.lg, newdata = train, type ="response"))
#retrain data
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
test$Survived <- factor(test$Survived)
test$Pclass <- factor(test$Pclass)
test$Sex <- factor(test$Sex)
test$Embarked <- factor(test$Embarked)
#retrain data
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
preds <- rep(0,891)
preds[probs>0.5] <- 1
table(preds, train.valid$Survived)
preds[probs>0.5] <- 1
#retrain data
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
preds <- rep(0,891)
preds[probs>0.5] <- 1
probs
#retrain data
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
test$Name <- NULL
#retrain data
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
preds <- rep(0,891)
#retrain data
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
source('C:/Users/lukek/Desktop/Fall2018/SYS6018/HW/HW1_Titanic/sys6018-competition-titanic/HW1_Titanic.R', echo=TRUE)
train$name <- NULL
test$Name <- NULL
source('C:/Users/lukek/Desktop/Fall2018/SYS6018/HW/HW1_Titanic/sys6018-competition-titanic/HW1_Titanic.R', echo=TRUE)
source('C:/Users/lukek/Desktop/Fall2018/SYS6018/HW/HW1_Titanic/sys6018-competition-titanic/HW1_Titanic.R', echo=TRUE)
#retrain data
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
preds <- rep(0,891)
preds[probs>0.5] <- 1
train.lm2 <- glm(Survived ~ . -PassenderId - Embarked - Fare, data = train[,!colnames(train) %in% c("Name","Ticket","Cabin","Parch")], family = "binomial")
train.lm2 <- glm(Survived ~ . -PassengerId - Embarked - Fare, data = train[,!colnames(train) %in% c("Name","Ticket","Cabin","Parch")], family = "binomial")
train.lg <- glm(Survived ~ . -PassengerId - Embarked - Fare, data = train[,!colnames(train) %in% c("Name","Ticket","Cabin","Parch")], family = "binomial")
summary(train.lg)
train[,!colnames(train) %in% c("Name","Ticket","Cabin","Parch")
)
train[,!colnames(train) %in% c("Name","Ticket","Cabin","Parch")]
train.lg <- glm(Survived ~ . -PassengerId - Embarked - Fare, data = train[,!colnames(train) %in% c("Name","Ticket","Cabin")], family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ ., data = train[,!colnames(train) %in% c("Name","Ticket","Cabin")], family = "binomial")
summary(train.lg)
train <- train[,!colnames(train) %in% c("Name","Ticket","Cabin")]
test <- test[,!colnames(train) %in% c("Name","Ticket","Cabin")]
test <- test[,!colnames(test) %in% c("Name","Ticket","Cabin")]
# Factor ------------------------------------------------------------------
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)
train$Sex <- factor(train$Sex)
train$Embarked <- factor(train$Embarked)
test$Survived <- factor(test$Survived)
test$Pclass <- factor(test$Pclass)
test$Sex <- factor(test$Sex)
test$Embarked <- factor(test$Embarked)
train.lg <- glm(Survived~. , data = train.train, family = "binomial")
summary(train.lg)
# Cross validation --------------------------------------------------------
sub <- sample(1:891, size = 446)
train.train <- train[sub,]
train.valid <- train[-sub,]
train.lg <- glm(Survived~. , data = train.train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ ., data = train[,!colnames(train) %in% c("Name","Ticket","Cabin")], family = "binomial")
train.lg <- glm(Survived ~ ., data = train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ .-Parch, data = train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ . , data = train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ . -Embarked, data = train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ . -Embarked -Fare, data = train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ . -Embarked -Fare -Parch, data = train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ . -PassengerId -Embarked -Fare -Parch, data = train, family = "binomial")
summary(train.lg)
train.lg <- glm(Survived ~ . -PassengerId -Embarked -Fare -Parch, data = train, family = "binomial")
summary(train.lg)
#
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
preds <- rep(0,891)
preds[probs>0.5] <- 1
#
probs <- as.vector(predict(train.lg, newdata = test, type ="response"))
preds <- rep(0,418)
preds[probs>0.5] <- 1
write.table(preds, file = "submission.csv", row.names=t, col.names=c("income"), sep=",")
write.table(preds, file = "submission.csv", row.names=F, col.names=c("income"), sep=",")
write.table(preds, file = "submission.csv", row.names=F, col.names=c("Survived"), sep=",")
write.table(preds, file = "submission.csv", row.names=F, col.names=c("Survived"), sep=",")
preds
test$PassengerId
#
final_result <- data_frame(test$PassengerId)
final_result
final_result["Survived"] <- preds
final_result
write.table(final_result, file = "submission.csv", row.names=F, col.names=c("PassengerId","Survived"), sep=",")
